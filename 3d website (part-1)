<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>3D Train Model</title>
    <style>
        body, html {
            margin: 0;
            padding: 0;
            overflow: hidden;
            background-color: #1a1a1a;
        }

        #scene-container {
            width: 100%;
            height: 100vh;
        }
    </style>
</head>
<body>
    <div id="scene-container"></div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/r128/three.min.js"></script>
    <script>
        // Initialize scene, camera, and renderer
        const scene = new THREE.Scene();
        const camera = new THREE.PerspectiveCamera(75, window.innerWidth / window.innerHeight, 0.1, 1000);
        const renderer = new THREE.WebGLRenderer();
        renderer.setSize(window.innerWidth, window.innerHeight);
        document.getElementById('scene-container').appendChild(renderer.domElement);

        // Create train model
        const trainGeometry = new THREE.BoxGeometry(2, 1, 1);
        const trainMaterial = new THREE.MeshBasicMaterial({color: 0xff0000});
        const train = new THREE.Mesh(trainGeometry, trainMaterial);
        scene.add(train);

        // Add wheels
        const wheelGeometry = new THREE.CylinderGeometry(0.2, 0.2, 0.5, 32);
        const wheelMaterial = new THREE.MeshBasicMaterial({color: 0x000000});
        
        const wheelPositions = [
            { x: -0.8, y: -0.6, z: 0.6 },
            { x: 0.8, y: -0.6, z: 0.6 },
            { x: -0.8, y: -0.6, z: -0.6 },
            { x: 0.8, y: -0.6, z: -0.6 }
        ];

        wheelPositions.forEach(pos => {
            const wheel = new THREE.Mesh(wheelGeometry, wheelMaterial);
            wheel.rotation.z = Math.PI / 2;
            wheel.position.set(pos.x, pos.y, pos.z);
            scene.add(wheel);
        });

        // Set camera position
        camera.position.z = 5;

        // Rotation function
        function animate() {
            requestAnimationFrame(animate);
            train.rotation.y += 0.01;
            renderer.render(scene, camera);
        }

        animate();

        // Handle window resize
        window.addEventListener('resize', () => {
            camera.aspect = window.innerWidth / window.innerHeight;
            camera.updateProjectionMatrix();
            renderer.setSize(window.innerWidth, window.innerHeight);
        });
    </script>
</body>
</html>
